{"ast":null,"code":"var _jsxFileName = \"/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/components/Videolist/Videolist.jsx\";\nimport { Link } from \"react-router-dom\";\nimport \"./Videolist.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Videolist({\n  Videolist,\n  selectedVideo\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"NEXT VIDEOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"videolist\",\n        children: Videolist.filter(videos => videos.id !== selectedVideo.id).map(videos => {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${videos.id}`,\n            className: \"link\",\n            children: [\"    \", /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"videolist__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"videolist__videos\",\n                  src: `${process.env.backendURL}`,\n                  alt: \"Video List\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 16,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"videolist__info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"videolist__title\",\n                  children: videos.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 18,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"videolist__channel\",\n                  children: videos.channel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Videolist;\nexport default Videolist;\nvar _c;\n$RefreshReg$(_c, \"Videolist\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Videolist","selectedVideo","children","className","fileName","_jsxFileName","lineNumber","columnNumber","filter","videos","id","map","to","src","process","env","backendURL","alt","title","channel","_c","$RefreshReg$"],"sources":["/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/components/Videolist/Videolist.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\"\nimport \"./Videolist.scss\"\n\nfunction Videolist({Videolist, selectedVideo}) {\n    return(\n        <>\n        <div className=\"videos\">\n        <p className=\"title\">NEXT VIDEOS</p>\n        <ul className=\"videolist\">\n            {Videolist\n            .filter((videos) => (videos.id) !==selectedVideo.id) \n            .map((videos) => {\n                return (\n                    <Link to={`/${videos.id}`} className=\"link\">    {/* adding this className to remove text decoration  */}\n                    <li className=\"videolist__item\" >\n                    <p><img className=\"videolist__videos\" src={`${process.env.backendURL}`} alt=\"Video List\"></img></p>\n                    <div className=\"videolist__info\">\n                    <p className=\"videolist__title\">{videos.title}</p>\n                    <p className=\"videolist__channel\">{videos.channel}</p> \n                    </div>   \n                </li> \n                </Link>        \n                )\n               \n            })}\n        </ul>\n        </div>\n        </>\n    )\n}\n\nexport default Videolist\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,SAASA,CAAC;EAACA,SAAS;EAAEC;AAAa,CAAC,EAAE;EAC3C,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACAL,OAAA;MAAKM,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACvBL,OAAA;QAAGM,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpCV,OAAA;QAAIM,SAAS,EAAC,WAAW;QAAAD,QAAA,EACpBF,SAAS,CACTQ,MAAM,CAAEC,MAAM,IAAMA,MAAM,CAACC,EAAE,KAAKT,aAAa,CAACS,EAAE,CAAC,CACnDC,GAAG,CAAEF,MAAM,IAAK;UACb,oBACIZ,OAAA,CAACF,IAAI;YAACiB,EAAE,EAAG,IAAGH,MAAM,CAACC,EAAG,EAAE;YAACP,SAAS,EAAC,MAAM;YAAAD,QAAA,GAAC,MAAI,eAChDL,OAAA;cAAIM,SAAS,EAAC,iBAAiB;cAAAD,QAAA,gBAC/BL,OAAA;gBAAAK,QAAA,eAAGL,OAAA;kBAAKM,SAAS,EAAC,mBAAmB;kBAACU,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW,EAAE;kBAACC,GAAG,EAAC;gBAAY;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACnGV,OAAA;gBAAKM,SAAS,EAAC,iBAAiB;gBAAAD,QAAA,gBAChCL,OAAA;kBAAGM,SAAS,EAAC,kBAAkB;kBAAAD,QAAA,EAAEO,MAAM,CAACS;gBAAK;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAClDV,OAAA;kBAAGM,SAAS,EAAC,oBAAoB;kBAAAD,QAAA,EAAEO,MAAM,CAACU;gBAAO;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAGX,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACJ,CAAC;AAEX;AAACa,EAAA,GA1BQpB,SAAS;AA4BlB,eAAeA,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}