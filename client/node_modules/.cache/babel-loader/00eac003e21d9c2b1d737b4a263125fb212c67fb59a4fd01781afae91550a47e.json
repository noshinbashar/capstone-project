{"ast":null,"code":"var _jsxFileName = \"/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/components/Comments/Comments.jsx\";\nimport \"./Comments.scss\";\nimport Like from \"../../assets/Images/likes.svg\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  Comments,\n  deleteComment\n}) {\n  function formatDate(timestamp) {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const timeDifference = now - date;\n    const seconds = Math.floor(timeDifference / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    if (days > 0) {\n      return `${days} day${days > 1 ? 's' : ''} ago`;\n    } else if (hours > 0) {\n      return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n    } else if (minutes > 0) {\n      return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n    } else {\n      return 'Just now';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"comments__box\",\n        children: Comments === null || Comments === void 0 ? void 0 : Comments.sort((a, b) => b.timestamp - a.timestamp).map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list__name\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list__comment\",\n              children: item.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-item__image\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: Like,\n                  alt: \"Like\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.likes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-item__button\",\n                  onClick: () => deleteComment(item.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this), \"   \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list__time\",\n              children: formatDate(item.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list__image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), \"     \"]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["Like","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Comments","deleteComment","formatDate","timestamp","date","Date","now","timeDifference","seconds","Math","floor","minutes","hours","days","children","className","sort","a","b","map","item","name","fileName","_jsxFileName","lineNumber","columnNumber","comment","src","alt","likes","onClick","id","_c","$RefreshReg$"],"sources":["/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/components/Comments/Comments.jsx"],"sourcesContent":["import \"./Comments.scss\"\nimport Like from \"../../assets/Images/likes.svg\"\nimport { useState } from \"react\";\n\nfunction Comments({Comments, deleteComment}) {\n\n    function formatDate(timestamp) {\n        const date = new Date(timestamp);\n        const now = new Date();\n        const timeDifference = now - date;\n    \n        const seconds = Math.floor(timeDifference / 1000);\n        const minutes = Math.floor(seconds / 60);\n        const hours = Math.floor(minutes / 60);\n        const days = Math.floor(hours / 24);\n    \n        if (days > 0) {\n            return `${days} day${days > 1 ? 's' : ''} ago`;\n        } else if (hours > 0) {\n            return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n        } else if (minutes > 0) {\n            return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n        } else {\n            return 'Just now';\n        }\n    }\n\n    return(\n    <>\n    <div className=\"comments\">\n    <ul className=\"comments__box\">\n    {Comments?.sort((a, b) => b.timestamp - a.timestamp).map((item) => {\n        return (\n        <li className=\"list\" key={item.id}>\n            <p className=\"list__name\">{item.name}</p>\n            <p className=\"list__comment\">{item.comment}</p>\n\n            <div className=\"comment-item\">\n                <div className=\"comment-item__image\">\n                    <img src={Like} alt=\"Like\" ></img>\n                    <p>{item.likes}</p>\n                </div>\n\n                <div>\n                    <button className=\"comment-item__button\" \n                    onClick={() => deleteComment(item.id)} >Delete</button>   {/* Delete button for comments */}\n                </div>\n            </div>\n\n                <p className=\"list__time\">{formatDate(item.timestamp)}</p>\n                <p className=\"list__image\"></p>     {/* This represents profile image for each comment */}\n                \n        </li>\n        );\n    })}\n\n    </ul>\n\n    </div>\n    </>\n\n)\n}\n\nexport default Comments;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}