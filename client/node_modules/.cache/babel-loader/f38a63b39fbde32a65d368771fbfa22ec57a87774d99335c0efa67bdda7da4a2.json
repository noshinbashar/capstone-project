{"ast":null,"code":"var _jsxFileName = \"/Users/noshinbashar/Desktop/capstone/client/src/components/ImageList/ImageList.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useRef, useState, useEffect } from \"react\"; // Import useEffect\nimport UploadImage from \"./../../assets/icons/upload.png\";\nimport \"./ImageList.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ImageList({\n  Imagelist,\n  selectedImage,\n  onImageUpload\n}) {\n  _s();\n  const inputRef = useRef(null);\n  const [image, setImage] = useState(\"\");\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newMedium, setNewMedium] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const handleImageClick = () => {\n    inputRef.current.click();\n  };\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    setImage(file);\n  };\n  const handleUploadImage = async () => {\n    if (image) {\n      const formData = new FormData();\n      formData.append('image', image);\n      formData.append('title', newTitle);\n      formData.append('medium', newMedium);\n      formData.append('description', newDescription);\n      try {\n        const response = await fetch('/api/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const updatedImage = await response.json();\n          const updatedImageList = [...Imagelist, updatedImage];\n          setImage(null);\n          setNewTitle(\"\");\n          setNewMedium(\"\");\n          setNewDescription(\"\");\n          console.log(updatedImageList);\n          // You might want to update your state with the updatedImageList here\n        } else {\n          console.error('Failed to upload image');\n        }\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    // Define handleImageClick and handleImageChange within the useEffect hook\n    const handleImageClick = () => {\n      inputRef.current.click();\n    };\n    const handleImageChange = event => {\n      const file = event.target.files[0];\n      setImage(file);\n    };\n  }, []); // Empty dependency array to run this effect only once\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"images__title\",\n        children: \"More Art Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"imagelist\",\n        children: Imagelist.filter(images => images.id !== selectedImage.id).map(images => {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: `/mygallery/${images.id}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"imagelist__item\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"imagelist__images\",\n                src: `${images.image}`,\n                alt: \"image List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)\n          }, images.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"images__title\",\n        children: \"Upload Art Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleImageClick,\n        children: [image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(image),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"upload__image\",\n          src: UploadImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: inputRef,\n          onChange: handleImageChange,\n          className: \"upload__input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload__box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"upload__title\",\n          type: \"text\",\n          placeholder: \"Title\",\n          value: newTitle,\n          onChange: e => setNewTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"upload__medium\",\n          type: \"text\",\n          placeholder: \"medium\",\n          value: newMedium,\n          onChange: e => setNewMedium(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"upload__description\",\n          type: \"text\",\n          placeholder: \"description\",\n          value: newDescription,\n          onChange: e => setNewDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUploadImage,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ImageList, \"N/fRuDH4AvsfAlYMfeXVI/jMcYc=\");\n_c = ImageList;\nexport default ImageList;\nvar _c;\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"names":["Link","useRef","useState","useEffect","UploadImage","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageList","Imagelist","selectedImage","onImageUpload","_s","inputRef","image","setImage","newTitle","setNewTitle","newMedium","setNewMedium","newDescription","setNewDescription","handleImageClick","current","click","handleImageChange","event","file","target","files","handleUploadImage","formData","FormData","append","response","fetch","method","body","ok","updatedImage","json","updatedImageList","console","log","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","filter","images","id","map","to","src","alt","onClick","URL","createObjectURL","type","ref","onChange","placeholder","value","e","_c","$RefreshReg$"],"sources":["/Users/noshinbashar/Desktop/capstone/client/src/components/ImageList/ImageList.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useRef, useState, useEffect } from \"react\"; // Import useEffect\nimport UploadImage from \"./../../assets/icons/upload.png\";\nimport \"./ImageList.scss\";\n\nfunction ImageList({ Imagelist, selectedImage, onImageUpload }) {\n    const inputRef = useRef(null);\n    const [image, setImage] = useState(\"\");\n    const [newTitle, setNewTitle] = useState(\"\");\n    const [newMedium, setNewMedium] = useState(\"\");\n    const [newDescription, setNewDescription] = useState(\"\");\n\n    const handleImageClick = () => {\n        inputRef.current.click();\n    };\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        setImage(file);\n    };\n\n    const handleUploadImage = async () => {\n        if (image) {\n            const formData = new FormData();\n            formData.append('image', image);\n            formData.append('title', newTitle);\n            formData.append('medium', newMedium);\n            formData.append('description', newDescription);\n\n            try {\n                const response = await fetch('/api/upload', {\n                    method: 'POST',\n                    body: formData\n                });\n\n                if (response.ok) {\n                    const updatedImage = await response.json();\n                    const updatedImageList = [...Imagelist, updatedImage];\n                    setImage(null);\n                    setNewTitle(\"\");\n                    setNewMedium(\"\");\n                    setNewDescription(\"\");\n                    console.log(updatedImageList);\n                    // You might want to update your state with the updatedImageList here\n                } else {\n                    console.error('Failed to upload image');\n                }\n            } catch (error) {\n                console.error('Error uploading image:', error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        // Define handleImageClick and handleImageChange within the useEffect hook\n        const handleImageClick = () => {\n            inputRef.current.click();\n        };\n\n        const handleImageChange = (event) => {\n            const file = event.target.files[0];\n            setImage(file);\n        };\n    }, []); // Empty dependency array to run this effect only once\n\n    return (\n        <>\n            <div className=\"images\">\n                <p className=\"images__title\">More Art Works</p>\n\n                <ul className=\"imagelist\">\n                    {Imagelist\n                        .filter((images) => images.id !== selectedImage.id)\n                        .map((images) => {\n                            return (\n                                <Link to={`/mygallery/${images.id}`} className=\"link\" key={images.id}>\n                                    <li className=\"imagelist__item\" >\n                                        <img className=\"imagelist__images\" src={`${images.image}`} alt=\"image List\"></img>\n                                    </li>\n                                </Link>\n                            )\n                        })}\n                </ul>\n            </div>\n\n            <div className=\"upload\">\n                <p className=\"images__title\">Upload Art Work</p>\n                <div onClick={handleImageClick}>\n                    {image ? (\n                        <img src={URL.createObjectURL(image)} alt=\"\" />\n                    ) : (\n                        <img className=\"upload__image\" src={UploadImage} alt=\"\" />\n                    )}\n                    <input type=\"file\" ref={inputRef} onChange={handleImageChange} className=\"upload__input\" />\n                </div>\n                <div className=\"upload__box\">\n                    <input className=\"upload__title\" type=\"text\" placeholder=\"Title\" value={newTitle}\n                        onChange={(e) => setNewTitle(e.target.value)} />\n                    <input className=\"upload__medium\" type=\"text\" placeholder=\"medium\" value={newMedium}\n                        onChange={(e) => setNewMedium(e.target.value)} />\n                    <input className=\"upload__description\" type=\"text\" placeholder=\"description\" value={newDescription}\n                        onChange={(e) => setNewDescription(e.target.value)} />\n                </div>\n                <button onClick={handleUploadImage}>Upload</button>\n            </div>\n        </>\n    );\n}\n\nexport default ImageList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}