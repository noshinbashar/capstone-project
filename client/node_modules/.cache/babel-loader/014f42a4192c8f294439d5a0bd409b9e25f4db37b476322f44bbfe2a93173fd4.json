{"ast":null,"code":"var _jsxFileName = \"/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/components/Comments/Comments.jsx\";\nimport \"./Comments.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  Comments\n}) {\n  function formatDate(timestamp) {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const timeDifference = now - date;\n    const seconds = Math.floor(timeDifference / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    if (days > 0) {\n      return `${days} day${days > 1 ? 's' : ''} ago`;\n    } else if (hours > 0) {\n      return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n    } else if (minutes > 0) {\n      return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n    } else {\n      return 'Just now';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"comments__box\",\n        children: Comments === null || Comments === void 0 ? void 0 : Comments.sort((a, b) => b.timestamp - a.timestamp).map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list__name\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list__comment\",\n              children: item.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list__time\",\n              children: formatDate(item.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list__image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","Comments","formatDate","timestamp","date","Date","now","timeDifference","seconds","Math","floor","minutes","hours","days","children","className","sort","a","b","map","item","name","fileName","_jsxFileName","lineNumber","columnNumber","comment","id","_c","$RefreshReg$"],"sources":["/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/components/Comments/Comments.jsx"],"sourcesContent":["import \"./Comments.scss\"\n\nfunction Comments({Comments}) {\n\n    function formatDate(timestamp) {\n        const date = new Date(timestamp);\n        const now = new Date();\n        const timeDifference = now - date;\n    \n        const seconds = Math.floor(timeDifference / 1000);\n        const minutes = Math.floor(seconds / 60);\n        const hours = Math.floor(minutes / 60);\n        const days = Math.floor(hours / 24);\n    \n        if (days > 0) {\n            return `${days} day${days > 1 ? 's' : ''} ago`;\n        } else if (hours > 0) {\n            return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n        } else if (minutes > 0) {\n            return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n        } else {\n            return 'Just now';\n        }\n    }\n\n    return(\n        <>\n        <div className=\"comments\">\n        <ul className=\"comments__box\">\n        {Comments?.sort((a, b) => b.timestamp - a.timestamp).map((item) => {\n                    return (\n                        <li className=\"list\" key={item.id}>\n                            <p className=\"list__name\">{item.name}</p>\n                            <p className=\"list__comment\">{item.comment}</p>\n                            {/* <p>{item.likes}</p> */}\n                            <p className=\"list__time\">{formatDate(item.timestamp)}</p>\n                            <p className=\"list__image\"></p>\n                        </li>\n                    );\n                })}\n\n        </ul>\n        </div>\n        </>\n\n    )\n}\n\nexport default Comments\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}