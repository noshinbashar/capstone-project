{"ast":null,"code":"var _jsxFileName = \"/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/pages/HomePage/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport Video from \"../../components/Video/Video\";\nimport { useState, useEffect } from \"react\";\nimport NewComment from \"../../components/Newcomment/Newcomment\";\nimport Comments from \"../../components/Comments/Comments\";\nimport Videolist from \"../../components/Videolist/Videolist\";\nimport Videoimage from \"../../components/Videoimage/Videoimage\";\nimport axios from \"axios\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [selectedVideo, setSelectedVideo] = useState([]);\n  const [videolist, setVideolist] = useState([]);\n  const apiKey = \"be28388a-18a2-46a8-94fa-d8549ebc8517\";\n  const url = \"https://unit-3-project-api-0a5620414506.herokuapp.com/\";\n  const defaultVideoId = \"84e96018-4022-434e-80bf-000ce4cd12b8\";\n  const params = useParams();\n  const [videoComments, setVideoComments] = useState([]);\n  const deleteComment = async commentId => {\n    try {\n      // Make DELETE request to delete the comment\n      await axios.delete(`${url}videos/${selectedVideo.id}/comments/${commentId}?api_key=${apiKey}`);\n\n      // Update videoComments state to remove the deleted comment\n      setVideoComments(videoComments.filter(comment => comment.id !== commentId));\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n    }\n  };\n  useEffect(() => {\n    async function getVideoList() {\n      const response = await axios.get(`${url}videos?api_key=${apiKey}`);\n      console.log(response.data);\n      setVideolist(response.data); //updating the videolist state using setVideolist\n    }\n    getVideoList();\n  }, []);\n  async function getSelectedVideo(VideoId) {\n    const response = await axios.get(`${url}videos/${VideoId}?api_key=${apiKey}`);\n    console.log(response.data);\n    setSelectedVideo(response.data); //updating the selectedvideo state using setSelectedVideo  \n    setVideoComments(response.data.comments);\n  }\n  useEffect(() => {\n    if (params.id) {\n      console.log(params.id); // this is coming from the url for the route /:id \n      getSelectedVideo(params.id);\n    } else {\n      getSelectedVideo(defaultVideoId);\n    }\n  }, [params]);\n\n  //Post comment\n  const postComment = async comment => {\n    console.log(comment);\n    try {\n      const commentsResponse = await axios.post(`${url}videos/${selectedVideo.id}/comments?api_key=${apiKey}`, comment);\n      console.log(commentsResponse);\n      setVideoComments([...videoComments, commentsResponse.data]);\n    } catch (error) {\n      console.error(\"Error posting comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Videoimage, {\n        videoimage: selectedVideo.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainpage\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemone\",\n          children: [/*#__PURE__*/_jsxDEV(Video, {\n            selectedVideo: selectedVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(NewComment, {\n            selectedVideo: selectedVideo,\n            postComment: postComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            Comments: videoComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemtwo\",\n          children: /*#__PURE__*/_jsxDEV(Videolist, {\n            Videolist: videolist,\n            selectedVideo: selectedVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(HomePage, \"8cmnZrI1SXm+QsQtLtpS8AaxNf4=\", false, function () {\n  return [useParams];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["Video","useState","useEffect","NewComment","Comments","Videolist","Videoimage","axios","Link","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","selectedVideo","setSelectedVideo","videolist","setVideolist","apiKey","url","defaultVideoId","params","videoComments","setVideoComments","deleteComment","commentId","delete","id","filter","comment","error","console","getVideoList","response","get","log","data","getSelectedVideo","VideoId","comments","postComment","commentsResponse","post","children","className","videoimage","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/pages/HomePage/HomePage.jsx"],"sourcesContent":["import Video from \"../../components/Video/Video\";\nimport { useState, useEffect } from \"react\";\nimport NewComment from \"../../components/Newcomment/Newcomment\";\nimport Comments from \"../../components/Comments/Comments\";\nimport Videolist from \"../../components/Videolist/Videolist\";\nimport Videoimage from \"../../components/Videoimage/Videoimage\";\nimport axios from \"axios\"\nimport { Link, useParams } from \"react-router-dom\";\n\nfunction HomePage () {\n    const [selectedVideo, setSelectedVideo] = useState([]);\n    const [videolist, setVideolist] = useState([]);\n    const apiKey = \"be28388a-18a2-46a8-94fa-d8549ebc8517\";\n    const url = \"https://unit-3-project-api-0a5620414506.herokuapp.com/\";\n    const defaultVideoId = \"84e96018-4022-434e-80bf-000ce4cd12b8\"\n    const params = useParams();\n    const [videoComments, setVideoComments] = useState([])\n\n    const deleteComment = async (commentId) => {\n      try {\n        // Make DELETE request to delete the comment\n        await axios.delete(`${url}videos/${selectedVideo.id}/comments/${commentId}?api_key=${apiKey}`);\n        \n        // Update videoComments state to remove the deleted comment\n        setVideoComments(videoComments.filter(comment => comment.id !== commentId));\n      } catch (error) {\n        console.error(\"Error deleting comment:\", error);\n      }\n    };\n\n    useEffect(() => {\n      async function getVideoList() {\n        const response = await axios.get(`${url}videos?api_key=${apiKey}`)\n        console.log(response.data)\n        setVideolist(response.data)     //updating the videolist state using setVideolist\n      }\n      getVideoList()\n    }, [])\n    \n    async function getSelectedVideo(VideoId) {\n      const response = await axios.get(`${url}videos/${VideoId}?api_key=${apiKey}`)\n      console.log(response.data)\n      setSelectedVideo(response.data)  //updating the selectedvideo state using setSelectedVideo  \n      setVideoComments(response.data.comments)\n    }\n\n    useEffect(() => {\n      if (params.id) {\n        console.log(params.id); // this is coming from the url for the route /:id \n        getSelectedVideo(params.id);\n      } else {\n        getSelectedVideo(defaultVideoId);\n      }\n    }, [params]);\n\n     //Post comment\n     const postComment = async (comment) => { \n      console.log(comment) \n      try {\n          const commentsResponse = await axios.post(`${url}videos/${selectedVideo.id}/comments?api_key=${apiKey}`,comment);\n          console.log(commentsResponse)\n          setVideoComments([...videoComments, commentsResponse.data])\n        } catch (error) {\n          console.error(\"Error posting comment:\", error);\n        }\n    };\n\n    return(\n        <>\n        <div className=\"App\">\n\n            <Videoimage videoimage={selectedVideo.image}/>\n\n            <div className=\"mainpage\">\n                <div className=\"itemone\">\n                    <Video selectedVideo={selectedVideo} />\n                    <NewComment selectedVideo={selectedVideo} postComment={postComment} />\n                    <Comments Comments={videoComments} />\n                </div>\n\n                <div className=\"itemtwo\">\n                    <Videolist Videolist={videolist} \n                    selectedVideo={selectedVideo} />\n                </div>\n            </div>\n\n        </div>\n        </>\n    )\n}\n\nexport default HomePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}