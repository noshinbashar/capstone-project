{"ast":null,"code":"var _jsxFileName = \"/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/components/Videolist/Videolist.jsx\";\nimport \"./Videolist.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Videolist({\n  Videolist\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"NEXT VIDEOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"videolist\",\n        children: Videolist\n        // .filter((videos) => (videos.id) !== props.selectedVideo.id) \n        .map(videos => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"videolist__item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"videolist__videos\",\n                src: videos.image,\n                alt: \"Video List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"videolist__info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"videolist__title\",\n                children: videos.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"videolist__channel\",\n                children: videos.channel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Videolist;\nexport default Videolist;\nvar _c;\n$RefreshReg$(_c, \"Videolist\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","Videolist","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","videos","src","image","alt","title","channel","_c","$RefreshReg$"],"sources":["/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/components/Videolist/Videolist.jsx"],"sourcesContent":["import \"./Videolist.scss\"\n\nfunction Videolist({Videolist}) {\n    return(\n        <>\n        <div className=\"videos\">\n        <p className=\"title\">NEXT VIDEOS</p>\n        <ul className=\"videolist\">\n            {Videolist\n            // .filter((videos) => (videos.id) !== props.selectedVideo.id) \n            .map((videos) => {\n                return (\n                    <li className=\"videolist__item\" >\n                    <p><img className=\"videolist__videos\" src={videos.image} alt=\"Video List\"></img></p>\n                    <div className=\"videolist__info\">\n                    <p className=\"videolist__title\">{videos.title}</p>\n                    <p className=\"videolist__channel\">{videos.channel}</p> \n                    </div>   \n                </li>         \n                )\n               \n            })}\n        </ul>\n        </div>\n        </>\n    )\n}\n\nexport default Videolist\n"],"mappings":";AAAA,OAAO,kBAAkB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,SAASA,CAAC;EAACA;AAAS,CAAC,EAAE;EAC5B,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACAJ,OAAA;MAAKK,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACvBJ,OAAA;QAAGK,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpCT,OAAA;QAAIK,SAAS,EAAC,WAAW;QAAAD,QAAA,EACpBD;QACD;QAAA,CACCO,GAAG,CAAEC,MAAM,IAAK;UACb,oBACIX,OAAA;YAAIK,SAAS,EAAC,iBAAiB;YAAAD,QAAA,gBAC/BJ,OAAA;cAAAI,QAAA,eAAGJ,OAAA;gBAAKK,SAAS,EAAC,mBAAmB;gBAACO,GAAG,EAAED,MAAM,CAACE,KAAM;gBAACC,GAAG,EAAC;cAAY;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACpFT,OAAA;cAAKK,SAAS,EAAC,iBAAiB;cAAAD,QAAA,gBAChCJ,OAAA;gBAAGK,SAAS,EAAC,kBAAkB;gBAAAD,QAAA,EAAEO,MAAM,CAACI;cAAK;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClDT,OAAA;gBAAGK,SAAS,EAAC,oBAAoB;gBAAAD,QAAA,EAAEO,MAAM,CAACK;cAAO;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAGT,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACJ,CAAC;AAEX;AAACQ,EAAA,GAxBQd,SAAS;AA0BlB,eAAeA,SAAS;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}