{"ast":null,"code":"var _jsxFileName = \"/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/App.jsx\",\n  _s = $RefreshSig$();\nimport \"./App.scss\";\nimport Header from \"./components/Header/Header\";\nimport Video from \"./components/Video/Video\";\nimport videoData from \"../src/Data/video-details.json\";\nimport { useState } from \"react\";\nimport NewComment from \"./components/Newcomment/Newcomment\";\nimport Comments from \"./components/Comments/Comments\";\nimport Videolist from \"./components/Videolist/Videolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedVideo, setSelectedVideo] = useState(videoData[0]);\n  const [comments, setComments] = useState(videoData[0]);\n  const [videolist, setVideolist] = useState(videoData);\n  function handleVideoClick(id) {\n    //  console.log(\"id: \" id);\n    const clickedVideo = videolist.find(video => {\n      return video.id === id;\n    });\n    setSelectedVideo(clickedVideo);\n    setComments(clickedVideo);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Video, {\n      selectedVideo: selectedVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewComment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      Comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Videolist, {\n      Videolist: videolist,\n      clickedVideo: handleVideoClick,\n      selectedVideo: selectedVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+x/r0DBQZ45SvqBwzrwqah5ox0Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Video","videoData","useState","NewComment","Comments","Videolist","jsxDEV","_jsxDEV","App","_s","selectedVideo","setSelectedVideo","comments","setComments","videolist","setVideolist","handleVideoClick","id","clickedVideo","find","video","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/noshinbashar/Desktop/BrainFlix/brainflix/src/App.jsx"],"sourcesContent":["import \"./App.scss\";\nimport Header from \"./components/Header/Header\";\nimport Video from \"./components/Video/Video\";\nimport videoData from \"../src/Data/video-details.json\";\nimport { useState } from \"react\";\nimport NewComment from \"./components/Newcomment/Newcomment\";\nimport Comments from \"./components/Comments/Comments\";\nimport Videolist from \"./components/Videolist/Videolist\";\n\nfunction App() {\n\n  const [selectedVideo, setSelectedVideo] = useState(videoData[0]);\n  const [comments, setComments] = useState(videoData[0]);\n  const [videolist, setVideolist] = useState(videoData);\n\n  function handleVideoClick(id) {\n    //  console.log(\"id: \" id);\n    const clickedVideo = videolist.find((video) => {\n    return video.id === id;\n  });\n  setSelectedVideo(clickedVideo);\n  setComments(clickedVideo);\n\n  \n  }\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <Video selectedVideo={selectedVideo} />\n      <NewComment />\n      <Comments Comments={comments}/>\n      <Videolist Videolist={videolist} \n      clickedVideo={handleVideoClick}\n      selectedVideo={selectedVideo}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n \n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,SAAS,MAAM,gCAAgC;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,SAAS,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAACD,SAAS,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACD,SAAS,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACD,SAAS,CAAC;EAErD,SAASe,gBAAgBA,CAACC,EAAE,EAAE;IAC5B;IACA,MAAMC,YAAY,GAAGJ,SAAS,CAACK,IAAI,CAAEC,KAAK,IAAK;MAC/C,OAAOA,KAAK,CAACH,EAAE,KAAKA,EAAE;IACxB,CAAC,CAAC;IACFN,gBAAgB,CAACO,YAAY,CAAC;IAC9BL,WAAW,CAACK,YAAY,CAAC;EAGzB;EAEA,oBACEX,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA,CAACR,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA,CAACP,KAAK;MAACU,aAAa,EAAEA;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCnB,OAAA,CAACJ,UAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdnB,OAAA,CAACH,QAAQ;MAACA,QAAQ,EAAEQ;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/BnB,OAAA,CAACF,SAAS;MAACA,SAAS,EAAES,SAAU;MAChCI,YAAY,EAAEF,gBAAiB;MAC/BN,aAAa,EAAEA;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5B,CAAC;AAEV;AAACjB,EAAA,CA7BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}